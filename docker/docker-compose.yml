volumes:
  kestra-data-ems:
    driver: local
  postgres-data-ems:
    driver: local

services:
  postgres-kestra-ems:
    image: postgres
    volumes:
      - postgres-data-ems:/var/lib/ems/postgresql/data/
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
      PGDATA: /var/lib/ems/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
    ports:
      - "5442:5432"

  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - kestra-data-ems:/app/ems/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      SECRET_GITHUB_TOKEN: ${SECRET_GITHUB_TOKEN}
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres-kestra-ems:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: true
              username: ${SECRET_KESTRA_USERNAME}
              password: ${SECRET_KESTRA_PASSWORD}
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/ems/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8082/
          tutorial-flows:
            enabled: false
    ports:
      - "8082:8080"
    depends_on:
      postgres-kestra-ems:
        condition: service_started